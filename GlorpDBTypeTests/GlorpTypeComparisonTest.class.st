Class {
	#name : #GlorpTypeComparisonTest,
	#superclass : #GlorpTestCase,
	#instVars : [
		'platform'
	],
	#category : #'GlorpDBTypeTests-Glorp-DBTests'
}

{ #category : #'VisualWorks metadata' }
GlorpTypeComparisonTest class >> visualWorksMetadata [

	^ #(
		'namespace' 'Glorp'
		'superclassNamespace' 'Glorp'
	)

]

{ #category : #running }
GlorpTypeComparisonTest >> setUp [
	super setUp.
	platform := DatabasePlatform new
]

{ #category : #testing }
GlorpTypeComparisonTest >> testIntegerToInteger [
	self assert: (GlorpIntegerType new platform: platform) = (GlorpIntegerType new platform: platform).
	self assert: (GlorpIntegerType new platform: platform) hash = (GlorpIntegerType new platform: platform) hash.
]

{ #category : #testing }
GlorpTypeComparisonTest >> testIntegerToIntegerishNumber [
	self assert: (GlorpIntegerType new platform: platform) = (GlorpNumericType new platform: platform).
	self assert: (GlorpIntegerType new platform: platform) hash = (GlorpNumericType new platform: platform) hash.
	self assert: (GlorpNumericType new platform: platform) = (GlorpIntegerType new platform: platform).
	self assert: (GlorpNumericType new platform: platform) hash = (GlorpIntegerType new platform: platform) hash.
]

{ #category : #testing }
GlorpTypeComparisonTest >> testIntegerToNumber [
	self deny: (GlorpIntegerType new platform: platform) = (GlorpNumericType new platform: platform; precision: 2).
	self deny: (GlorpIntegerType new platform: platform) hash = (GlorpNumericType new platform: platform; precision: 2) hash.
	self deny: (GlorpNumericType new platform: platform; precision: 2) = (GlorpIntegerType new platform: platform).
	self deny: (GlorpNumericType new platform: platform; precision: 2) hash = (GlorpIntegerType new platform: platform) hash.
]

{ #category : #testing }
GlorpTypeComparisonTest >> testIntegerishNumberToNumber [
	self deny: (GlorpNumericType new platform: platform) = (GlorpNumericType new platform: platform; precision: 2).
	self deny: (GlorpNumericType new platform: platform) hash = (GlorpNumericType new platform: platform; precision: 2) hash.
	self deny: (GlorpNumericType new platform: platform; precision: 2) = (GlorpNumericType new platform: platform).
	self deny: (GlorpNumericType new platform: platform; precision: 2) hash = (GlorpNumericType new platform: platform) hash.
]

{ #category : #testing }
GlorpTypeComparisonTest >> testNumberToNumber [
	self assert: (GlorpNumericType new platform: platform; precision: 2) = (GlorpNumericType new platform: platform; precision: 2).
	self assert: (GlorpNumericType new platform: platform; precision: 2) hash = (GlorpNumericType new platform: platform; precision: 2) hash.
	self assert: (GlorpNumericType new platform: platform; precision: 2) = (GlorpNumericType new platform: platform; precision: 2).
	self assert: (GlorpNumericType new platform: platform; precision: 2) hash = (GlorpNumericType new platform: platform; precision: 2) hash.
]
